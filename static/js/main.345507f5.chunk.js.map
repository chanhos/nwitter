{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Nweet","nweetObject","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","event","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onNweetSubmit","preventDefault","update","className","onSubmit","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","console","log","getDownloadURL","nweetObj","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapShot","nweetArray","docs","map","data","marginTop","key","AuthForm","newAccount","setNewAccount","error","setError","email","setEmail","password","setPassword","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","name","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.345507f5.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\" ; \r\nimport  \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN ,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID ,\r\n    appId: process.env.REACT_APP_APP_ID, \r\n  };\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  \r\n  \r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n\r\n  export const dbService = firebase.firestore();\r\n\r\n  export const storageService = firebase.storage();","import React , { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ( {nweetObject , isOwner} ) => { \r\n    const [editing , setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObject.text);\r\n\r\n    const onDeleteClick = async (event) =>{\r\n        const ok = window.confirm(\"Are you sure you wanna delete this nweet\");\r\n        if (ok)\r\n        {\r\n            //delete Nweet\r\n           await dbService.doc(`nweets/${nweetObject.id}`).delete();\r\n           await storageService.refFromURL(nweetObject.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing( (prev) => !prev) ; \r\n    \r\n    const onNweetSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObject.id}`).update(\r\n          {\r\n              text : newNweet,              \r\n          }  \r\n        );\r\n        setEditing(false);\r\n    };\r\n\r\n    const onNewNweetChange = (event)=> {\r\n        const { \r\n            target : {value} ,\r\n        } = event ;\r\n        setNewNweet(value);\r\n    }    \r\n\r\n    return ( \r\n    <div className=\"nweet\">\r\n        {           \r\n            editing ? (\r\n              <>               \r\n                <form onSubmit={onNweetSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Edit your nweet\"\r\n                    value={newNweet} \r\n                    required\r\n                    autoFocus\r\n                    onChange={onNewNweetChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/> \r\n                </form>            \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>                \r\n              </>  \r\n            ) : (\r\n              <>\r\n                <h4>{nweetObject.text}</h4>\r\n                {nweetObject.attachmentUrl && <img src={nweetObject.attachmentUrl} />}\r\n                {isOwner && ( \r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div> \r\n                )}\r\n              </>\r\n            )\r\n        }\r\n    </div>\r\n    \r\n    );\r\n\r\n} ; \r\n\r\nexport default Nweet;","import React , { useState } from 'react';\r\nimport {storageService , dbService } from 'fbase';\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes  } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\n\r\nconst NweetFactory = ( {userObj })=>{\r\n    //Nweet 맨션\r\n    const [nweet , setNweet]  = useState(\"\");    \r\n    //Nweet 맨션 첨부파일\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    \r\n    const onSubmit = async (event) => {        \r\n        \r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();        \r\n        let attachmentUrl  = \"\";\r\n        \r\n        if (attachment !== \"\")\r\n        {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response =  await attachmentRef.putString(attachment, \"data_url\")\r\n            console.log(response);\r\n            attachmentUrl = await response.ref.getDownloadURL(); \r\n            console.log(attachmentUrl);           \r\n        }\r\n        \r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl  \r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        /*await dbService.collection(\"nweets\").add({\r\n            text: nweet,\r\n            createAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n\r\n        });\r\n        setNweet(\"\"); */\r\n    };\r\n\r\n\r\n    const onFileChange = (event) => {\r\n        const { \r\n            target : { files },\r\n        } = event ;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { \r\n                currentTarget : { result },\r\n            } = finishedEvent\r\n            setAttachment(result);\r\n            //console.log(attachment);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n\r\n    const onChange = (event) => {\r\n        const { \r\n            target : {value} ,\r\n        } = event ;\r\n        setNweet(value);\r\n    } ; \r\n\r\n\r\n    const onClearAttachment = () =>  setAttachment(\"\"); \r\n    \r\n\r\n    return (        \r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n             <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>           \r\n            \r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input       \r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                opacity: 0,\r\n                }}\r\n            />            \r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }                 \r\n        </form>       \r\n    ) ;\r\n};\r\n\r\nexport default  NweetFactory;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService ,storageService  } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\n\r\nconst Home = ( {userObj} ) =>{  \r\n    const [nweets, setNweets] = useState([]) ; \r\n\r\n    /* For-Each Way ( More - Render)\r\n    const getNweets = async () => {\r\n        const dbNweets = await dbService.collection(\"nweets\").get();\r\n        dbNweets.forEach(document => {\r\n            const nweetObject = {\r\n                ...document.data(),\r\n                id : document.id,\r\n            };\r\n            setNweets( (prev)=> [nweetObject, ...prev]);\r\n        });\r\n    };\r\n    */\r\n\r\n    useEffect( ()=>{\r\n        //getNweets();\r\n        dbService.collection(\"nweets\").orderBy(\"createAt\",\"desc\").onSnapshot( snapShot =>{\r\n            const nweetArray = snapShot.docs.map( (doc) => ({\r\n                id : doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []) ;    \r\n\r\n   \r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>            \r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map( (nweet)=> (\r\n                   <Nweet \r\n                    key={nweet.id} \r\n                    nweetObject={nweet}\r\n                    isOwner={nweet.creatorId===userObj.uid} \r\n                   />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}; \r\nexport default Home;","import React ,{useState} from 'react';\r\nimport { authService } from 'fbase' ;\r\n\r\n\r\nconst AuthForm = ()=>{\r\n    const [newAccount , setNewAccount] = useState(true);\r\n    const [error , setError] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\") ;\r\n    const [password, setPassword] = useState(\"\");\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data; \r\n            if(newAccount){\r\n                //Create Account\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }else {\r\n                //Log in\r\n                data = await authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }    \r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n        \r\n    };\r\n    \r\n    const onChange = (event) => {\r\n        const { \r\n            target : { name, value },\r\n        } = event ;\r\n\r\n        if ( name ===\"email\"){\r\n            setEmail(value);\r\n        }else if ( name ===\"password\"){\r\n            setPassword(value);\r\n        }\r\n        \r\n    };\r\n    \r\n    const toggleAccount = () =>{\r\n        setNewAccount( prev => !prev)\r\n    };\r\n\r\n    return (\r\n        <>       \r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"        \r\n                    />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    required \r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                    />\r\n                <input \r\n                    type=\"submit\"   \r\n                    value={newAccount ? \"Create New Account\" : \"Sign in\"} \r\n                    className=\"authInput authSubmit\"\r\n                />                      \r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport \"../styles.css\" ;\r\n\r\n const Auth = () => {\r\n   \r\n    \r\n    const onSocialClick = async (event) => {\r\n        const { \r\n            target : { name },\r\n        } = event ; \r\n        let provider ;\r\n        if (name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if (name === \"github\")\r\n        {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm/>          \r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\r\n                </button>               \r\n            </div>\r\n        </div>\r\n    );\r\n } ;\r\n export default Auth;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation = ( {userObj}) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav> ; \r\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\r\nimport { authService , dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default ( {refreshUser , userObj} ) => {\r\n    const history = useHistory();\r\n    const [newDisplayName , setNewDisplayName ] = useState(userObj.displayName || \"\");\r\n\r\n\r\n\r\n    const onLogOutClick =  () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const getMyNweets = async ()=>{\r\n        const nweets = await dbService.collection('nweets')\r\n                                      .where(\"creatorId\",\"==\", userObj.uid)                                \r\n                                      .orderBy(\"createAt\",\"desc\")\r\n                                      .get();\r\n                                      \r\n        console.log(nweets.docs.map(doc => doc.data()) );\r\n    };\r\n    \r\n    useEffect( ()=>{\r\n        //내가 작성한 nweets 를 가져온다. \r\n        getMyNweets();\r\n    }, [])\r\n    \r\n    const onChange = (event)=>{\r\n        const { \r\n            target : {value} ,\r\n        } = event ;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        if( userObj.displayName !== newDisplayName){\r\n           await userObj.updateProfile( {\r\n                displayName : newDisplayName ,\r\n           });\r\n        }\r\n        refreshUser();\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Display name\"\r\n                    onChange={onChange}\r\n                    autoFocus\r\n                    value={newDisplayName}  \r\n                    className=\"formInput\"  \r\n                />\r\n                 <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />                          \r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n} ;","import React from \"react\";\r\nimport { HashRouter as Router ,Route, Switch} from \"react-router-dom\" ; \r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\n\r\n const AppRouter = ( {refreshUser , isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                { isLoggedIn ? (                    \r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\" >\r\n                            <Home userObj={userObj}/>\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </div>\r\n                    \r\n                ): (\r\n                    <>\r\n                    <Route exact path=\"/\" > \r\n                        <Auth />\r\n                    </Route>                    \r\n                    </>\r\n                )}    \r\n            </Switch>\r\n        </Router>\r\n    );\r\n}; \r\n\r\n\r\nexport default AppRouter;","import React , { useState, useEffect }from 'react';\nimport AppRouter from \"components/Router\";\nimport { authService } from 'fbase';\n\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj , setUserObj] = useState(null);\n\n  useEffect( ()=> {\n    authService.onAuthStateChanged(   (user) => {\n      console.log(user);\n      if(user)\n      {\n        setUserObj(\n          {\n            displayName : user.displayName ,\n            uid : user.uid,\n            updateProfile : (args) => user.updateProfile(args),\n          }\n        );      \n      }else{\n        setUserObj(null);\n      }\n     \n      setInit(true);\n    } );\n  }, []) ; \n\nconst refreshUser = ()=>{\n    const user = authService.currentUser;\n    if (user)\n    {\n      setUserObj({\n        displayName : user.displayName ,\n        uid : user.uid,\n        updateProfile : (args) => user.updateProfile(args),\n      });\n    }else{\n      setUserObj(null);\n    }\n}; \n\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n      <footer>&copy; nwitter {new Date().getFullYear()} </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}